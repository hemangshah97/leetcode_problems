/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode AddTwoNumbers(ListNode l1, ListNode l2) {
        int carry = 0;
        if(l1.val+l2.val>=10)
            carry=1;
        ListNode l3 = new ListNode((l1.val+l2.val)%10);
        Console.WriteLine((l1.val+l2.val)%10);
        ListNode tmp = l3;
        l1=l1.next;
        l2=l2.next;
        while(l1 != null && l2 != null)
        {
            
            tmp.next = new ListNode((l1.val+l2.val+carry)%10);
            tmp=tmp.next;
            Console.WriteLine((l1.val+l2.val+carry)%10);
            if((l1.val+l2.val+carry)>=10)
                carry=1;
            else 
                carry=0;
            l1=l1.next;
            l2=l2.next;
        }
        while(l1 != null)
        {
            tmp.next = new ListNode((l1.val+carry)%10);
            tmp=tmp.next;
            if((l1.val+carry)>=10)
                carry=1;
            else 
                carry=0;
            l1=l1.next;
        }
        while(l2 != null)
        {
            tmp.next = new ListNode((l2.val+carry)%10);
            tmp=tmp.next;
            if((l2.val+carry)>=10)
                carry = 1;
            else
                carry = 0;
            l2=l2.next;
        }
        if(carry==1)
        {
            tmp.next = new ListNode(1);
            tmp=tmp.next;
        }
        tmp=null;
        return l3;
    }
}
