/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public boolean isSubtree(TreeNode s, TreeNode t) {
        String tree1 = createStr(s);
        String tree2 = createStr(t);
        return (tree1.indexOf(tree2)>=0);
    }
    
    public String createStr(TreeNode t)
    {
        if(t.left == null && t.right == null)
            return "#" + t.val + " " + "lnull" + " " + "rnull";
        else if(t.left == null)
            return "#" + t.val + " " + "lnull" + " " + createStr(t.right);
        else if(t.right == null)
            return "#" + t.val + " " + createStr(t.left) + " " + "rnull";
        return "#" + t.val + " " + createStr(t.left) + " " + createStr(t.right);
    }
}
