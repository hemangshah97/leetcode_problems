class Solution {
    public int numIslands(char[][] grid) {
        int count=0;
        if(grid.length == 0)
            return 0;
        int[][] visited = new int[grid.length][grid[0].length];
        for(int i=0; i<grid.length;i++)
        {
            for(int j=0; j<grid[0].length; j++)
            {
                if(grid[i][j]=='1' && visited[i][j]==0)
                {
                    findIsland(grid, i, j, visited);
                    count++;
                }
            }
        }
        return count;
    }
    public void findIsland(char[][] grid, int i, int j, int[][] visited)
    {
        if(i<grid.length && i>=0 && j<grid[0].length && j>=0 && visited[i][j]==0 && grid[i][j]=='1')
        {
            visited[i][j]=1;
            findIsland(grid,i-1,j,visited);
            findIsland(grid,i+1,j,visited);
            findIsland(grid,i,j-1,visited);
            findIsland(grid,i,j+1,visited);
        }
    }
}
