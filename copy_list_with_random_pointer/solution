/*
// Definition for a Node.
class Node {
    public int val;
    public Node next;
    public Node random;

    public Node() {}

    public Node(int _val,Node _next,Node _random) {
        val = _val;
        next = _next;
        random = _random;
    }
};
*/
class Solution {
    HashMap<Node,Node> visited = new HashMap<>();
    public Node copyRandomList(Node head) {
        if(head==null)
            return null;
        if(this.visited.containsKey(head))
        {
            return this.visited.get(head);
        }
        Node node = new Node(head.val,null,null);
        this.visited.put(head,node);
        node.next = this.copyRandomList(head.next);
        node.random = this.copyRandomList(head.random);
        return node;
    }
}
